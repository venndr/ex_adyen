# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Adyen.Api.ClassicCheckoutSDK do
  @moduledoc """
  API calls for all endpoints tagged `ClassicCheckoutSDK`.
  """

  alias Adyen.Connection
  import Adyen.RequestBuilder


  @doc """
  post-paymentSession
  Provides the data object that can be used to start the Checkout SDK. To set up the payment, pass its amount, currency, and other required parameters. We use this to optimise the payment flow and perform better risk assessment of the transaction.  For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :idempotency_key (String.t): A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    - :body (PaymentSetupRequest): 
  ## Returns

  {:ok, Adyen.Model.PaymentSetupResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_payment_session(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.PaymentSetupResponse.t} | {:ok, Adyen.Model.ServiceError21.t} | {:error, Tesla.Env.t}
  def post_payment_session(connection, opts \\ []) do
    optional_params = %{
      :"Idempotency-Key" => :headers,
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/paymentSession")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.PaymentSetupResponse{}},
      { 400, %Adyen.Model.ServiceError21{}},
      { 401, %Adyen.Model.ServiceError21{}},
      { 403, %Adyen.Model.ServiceError21{}},
      { 422, %Adyen.Model.ServiceError21{}},
      { 500, %Adyen.Model.ServiceError21{}}
    ])
  end

  @doc """
  post-payments-result
  Verifies the payment result using the payload returned from the Checkout SDK.  For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :idempotency_key (String.t): A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    - :body (PaymentVerificationRequest): 
  ## Returns

  {:ok, Adyen.Model.PaymentVerificationResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_payments_result(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.ServiceError21.t} | {:ok, Adyen.Model.PaymentVerificationResponse.t} | {:error, Tesla.Env.t}
  def post_payments_result(connection, opts \\ []) do
    optional_params = %{
      :"Idempotency-Key" => :headers,
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/payments/result")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.PaymentVerificationResponse{}},
      { 400, %Adyen.Model.ServiceError21{}},
      { 401, %Adyen.Model.ServiceError21{}},
      { 403, %Adyen.Model.ServiceError21{}},
      { 422, %Adyen.Model.ServiceError21{}},
      { 500, %Adyen.Model.ServiceError21{}}
    ])
  end
end
