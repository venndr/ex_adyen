# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Adyen.Api.Orders do
  @moduledoc """
  API calls for all endpoints tagged `Orders`.
  """

  alias Adyen.Connection
  import Adyen.RequestBuilder


  @doc """
  post-orders
  Creates an order to be used for partial payments. Make a POST `/orders` call before making a `/payments` call when processing payments with different payment methods.

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :idempotency_key (String.t): A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    - :body (CheckoutCreateOrderRequest): 
  ## Returns

  {:ok, Adyen.Model.CheckoutCreateOrderResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_orders(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.ServiceError21.t} | {:ok, Adyen.Model.CheckoutCreateOrderResponse.t} | {:error, Tesla.Env.t}
  def post_orders(connection, opts \\ []) do
    optional_params = %{
      :"Idempotency-Key" => :headers,
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/orders")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.CheckoutCreateOrderResponse{}},
      { 400, %Adyen.Model.ServiceError21{}},
      { 401, %Adyen.Model.ServiceError21{}},
      { 403, %Adyen.Model.ServiceError21{}},
      { 422, %Adyen.Model.ServiceError21{}},
      { 500, %Adyen.Model.ServiceError21{}}
    ])
  end

  @doc """
  post-orders-cancel
  Cancels an order. Cancellation of an order results in an automatic rollback of all payments made in the order, either by canceling or refunding the payment, depending on the type of payment method.

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :idempotency_key (String.t): A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    - :body (CheckoutCancelOrderRequest): 
  ## Returns

  {:ok, Adyen.Model.CheckoutCancelOrderResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_orders_cancel(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.CheckoutCancelOrderResponse.t} | {:ok, Adyen.Model.ServiceError21.t} | {:error, Tesla.Env.t}
  def post_orders_cancel(connection, opts \\ []) do
    optional_params = %{
      :"Idempotency-Key" => :headers,
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/orders/cancel")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.CheckoutCancelOrderResponse{}},
      { 400, %Adyen.Model.ServiceError21{}},
      { 401, %Adyen.Model.ServiceError21{}},
      { 403, %Adyen.Model.ServiceError21{}},
      { 422, %Adyen.Model.ServiceError21{}},
      { 500, %Adyen.Model.ServiceError21{}}
    ])
  end

  @doc """
  post-paymentMethods-balance
  Retrieves the balance remaining on a shopper's gift card. To check a gift card's balance, make a POST `/paymentMethods/balance` call and include the gift card's details inside a `paymentMethod` object.

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :idempotency_key (String.t): A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    - :body (CheckoutBalanceCheckRequest): 
  ## Returns

  {:ok, Adyen.Model.CheckoutBalanceCheckResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_payment_methods_balance(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.CheckoutBalanceCheckResponse.t} | {:ok, Adyen.Model.ServiceError21.t} | {:error, Tesla.Env.t}
  def post_payment_methods_balance(connection, opts \\ []) do
    optional_params = %{
      :"Idempotency-Key" => :headers,
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/paymentMethods/balance")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.CheckoutBalanceCheckResponse{}},
      { 400, %Adyen.Model.ServiceError21{}},
      { 401, %Adyen.Model.ServiceError21{}},
      { 403, %Adyen.Model.ServiceError21{}},
      { 422, %Adyen.Model.ServiceError21{}},
      { 500, %Adyen.Model.ServiceError21{}}
    ])
  end
end
