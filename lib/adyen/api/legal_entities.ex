# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Adyen.Api.LegalEntities do
  @moduledoc """
  API calls for all endpoints tagged `LegalEntities`.
  """

  alias Adyen.Connection
  import Adyen.RequestBuilder


  @doc """
  get-legalEntities-id
  Returns a specific legal entity.

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - id (String.t): Unique identifier of the legal entity.
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, Adyen.Model.LegalEntity.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_legal_entities_id(Tesla.Env.client, String.t, keyword()) :: {:ok, Adyen.Model.LegalEntity.t} | {:ok, Adyen.Model.ServiceError.t} | {:error, Tesla.Env.t}
  def get_legal_entities_id(connection, id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/legalEntities/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.LegalEntity{}},
      { 400, %Adyen.Model.ServiceError{}},
      { 401, %Adyen.Model.ServiceError{}},
      { 403, %Adyen.Model.ServiceError{}},
      { 422, %Adyen.Model.ServiceError{}},
      { 500, %Adyen.Model.ServiceError{}}
    ])
  end

  @doc """
  patch-legalEntities-id
  Updates a legal entity. When updating a legal entity resource, note that:   * To update the `entityAssociations` array, you need to replace the entire array. For example, if the array has 3 entries and you want to remove 1 entry, you need to PATCH the resource with the remaining 2 entries.

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - id (String.t): Unique identifier of the legal entity.
  - opts (KeywordList): [optional] Optional parameters
    - :body (GenericEntityInfo): 
  ## Returns

  {:ok, Adyen.Model.LegalEntity.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec patch_legal_entities_id(Tesla.Env.client, String.t, keyword()) :: {:ok, Adyen.Model.LegalEntity.t} | {:ok, Adyen.Model.ServiceError.t} | {:error, Tesla.Env.t}
  def patch_legal_entities_id(connection, id, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:patch)
    |> url("/legalEntities/#{id}")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.LegalEntity{}},
      { 400, %Adyen.Model.ServiceError{}},
      { 401, %Adyen.Model.ServiceError{}},
      { 403, %Adyen.Model.ServiceError{}},
      { 422, %Adyen.Model.ServiceError{}},
      { 500, %Adyen.Model.ServiceError{}}
    ])
  end

  @doc """
  post-legalEntities
  Creates a legal entity. This resource contains information about an individual or organization that will be onboarded on your balance platform. Adyen uses this information to perform Know Your Customer (KYC) checks as required by payment industry regulations. Your Adyen contact will inform you of the status and results of the KYC checks.  When the legal entity passes the verification checks, you can issue a card to them. For more information, refer to [Onboard and verify account holders](https://docs.adyen.com/issuing/kyc-verification).

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (LegalEntityInfo): 
  ## Returns

  {:ok, Adyen.Model.LegalEntity.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_legal_entities(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.LegalEntity.t} | {:ok, Adyen.Model.ServiceError.t} | {:error, Tesla.Env.t}
  def post_legal_entities(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/legalEntities")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.LegalEntity{}},
      { 400, %Adyen.Model.ServiceError{}},
      { 401, %Adyen.Model.ServiceError{}},
      { 403, %Adyen.Model.ServiceError{}},
      { 422, %Adyen.Model.ServiceError{}},
      { 500, %Adyen.Model.ServiceError{}}
    ])
  end
end
