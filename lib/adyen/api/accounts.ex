# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdyenForPlatforms:AccountAPI.Api.Accounts do
  @moduledoc """
  API calls for all endpoints tagged `Accounts`.
  """

  alias AdyenForPlatforms:AccountAPI.Connection
  import AdyenForPlatforms:AccountAPI.RequestBuilder


  @doc """
  post-closeAccount
  Closes an account. If an account is closed, you cannot process transactions, pay out its funds, or reopen it. If payments are made to a closed account, the payments will be directed to your liable account.

  ## Parameters

  - connection (AdyenForPlatforms:AccountAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (CloseAccountRequest): 
  ## Returns

  {:ok, AdyenForPlatforms:AccountAPI.Model.CloseAccountResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_close_account(Tesla.Env.client, keyword()) :: {:ok, AdyenForPlatforms:AccountAPI.Model.CloseAccountResponse.t} | {:ok, AdyenForPlatforms:AccountAPI.Model.ServiceError.t} | {:error, Tesla.Env.t}
  def post_close_account(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/closeAccount")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %AdyenForPlatforms:AccountAPI.Model.CloseAccountResponse{}},
      { 202, %AdyenForPlatforms:AccountAPI.Model.CloseAccountResponse{}},
      { 400, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 401, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 403, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 422, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 500, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}}
    ])
  end

  @doc """
  post-createAccount
  Creates an account under an account holder. An account holder can have [multiple accounts](https://docs.adyen.com/platforms/account-holders-and-accounts#create-additional-accounts).

  ## Parameters

  - connection (AdyenForPlatforms:AccountAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (CreateAccountRequest): 
  ## Returns

  {:ok, AdyenForPlatforms:AccountAPI.Model.CreateAccountResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_create_account(Tesla.Env.client, keyword()) :: {:ok, AdyenForPlatforms:AccountAPI.Model.ServiceError.t} | {:ok, AdyenForPlatforms:AccountAPI.Model.CreateAccountResponse.t} | {:error, Tesla.Env.t}
  def post_create_account(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/createAccount")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %AdyenForPlatforms:AccountAPI.Model.CreateAccountResponse{}},
      { 202, %AdyenForPlatforms:AccountAPI.Model.CreateAccountResponse{}},
      { 400, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 401, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 403, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 422, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 500, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}}
    ])
  end

  @doc """
  post-updateAccount
  Updates the description or payout schedule of an account.

  ## Parameters

  - connection (AdyenForPlatforms:AccountAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (UpdateAccountRequest): 
  ## Returns

  {:ok, AdyenForPlatforms:AccountAPI.Model.UpdateAccountResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_update_account(Tesla.Env.client, keyword()) :: {:ok, AdyenForPlatforms:AccountAPI.Model.ServiceError.t} | {:ok, AdyenForPlatforms:AccountAPI.Model.UpdateAccountResponse.t} | {:error, Tesla.Env.t}
  def post_update_account(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/updateAccount")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %AdyenForPlatforms:AccountAPI.Model.UpdateAccountResponse{}},
      { 202, %AdyenForPlatforms:AccountAPI.Model.UpdateAccountResponse{}},
      { 400, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 401, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 403, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 422, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}},
      { 500, %AdyenForPlatforms:AccountAPI.Model.ServiceError{}}
    ])
  end
end
