# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Adyen.Api.BalanceAccounts do
  @moduledoc """
  API calls for all endpoints tagged `BalanceAccounts`.
  """

  alias Adyen.Connection
  import Adyen.RequestBuilder


  @doc """
  get-balanceAccounts-id
  Returns a specific balance account.

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - id (String.t): Unique identifier of the balance account.
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, Adyen.Model.BalanceAccount.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_balance_accounts_id(Tesla.Env.client, String.t, keyword()) :: {:ok, Adyen.Model.RestServiceError.t} | {:ok, Adyen.Model.BalanceAccount.t} | {:error, Tesla.Env.t}
  def get_balance_accounts_id(connection, id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/balanceAccounts/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.BalanceAccount{}},
      { 400, %Adyen.Model.RestServiceError{}},
      { 401, %Adyen.Model.RestServiceError{}},
      { 403, %Adyen.Model.RestServiceError{}},
      { 422, %Adyen.Model.RestServiceError{}},
      { 500, %Adyen.Model.RestServiceError{}}
    ])
  end

  @doc """
  get-balanceAccounts-id-paymentInstruments
  Returns a paginated list of the payment instruments associated with a specific balance account. To fetch multiple pages, use the query parameters.  For example, to limit the page to 3 payment instruments and to skip the first 6: `/balanceAccounts/{id}/paymentInstruments?limit=3&offset=6`

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - id (String.t): Unique identifier of the balance account.
  - opts (KeywordList): [optional] Optional parameters
    - :offset (integer()): The number of items that you want to skip.
    - :limit (integer()): The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.
  ## Returns

  {:ok, Adyen.Model.PaginatedPaymentInstrumentsResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_balance_accounts_id_payment_instruments(Tesla.Env.client, String.t, keyword()) :: {:ok, Adyen.Model.RestServiceError.t} | {:ok, Adyen.Model.PaginatedPaymentInstrumentsResponse.t} | {:error, Tesla.Env.t}
  def get_balance_accounts_id_payment_instruments(connection, id, opts \\ []) do
    optional_params = %{
      :"offset" => :query,
      :"limit" => :query
    }
    %{}
    |> method(:get)
    |> url("/balanceAccounts/#{id}/paymentInstruments")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.PaginatedPaymentInstrumentsResponse{}},
      { 400, %Adyen.Model.RestServiceError{}},
      { 401, %Adyen.Model.RestServiceError{}},
      { 403, %Adyen.Model.RestServiceError{}},
      { 422, %Adyen.Model.RestServiceError{}},
      { 500, %Adyen.Model.RestServiceError{}}
    ])
  end

  @doc """
  post-balanceAccounts
  Creates a balance account. The balance account resource holds the funds of the associated account holder.  For more information, refer to [Create accounts](https://docs.adyen.com/issuing/create-accounts).

  ## Parameters

  - connection (Adyen.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (BalanceAccountInfo): 
  ## Returns

  {:ok, Adyen.Model.BalanceAccount.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_balance_accounts(Tesla.Env.client, keyword()) :: {:ok, Adyen.Model.RestServiceError.t} | {:ok, Adyen.Model.BalanceAccount.t} | {:error, Tesla.Env.t}
  def post_balance_accounts(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/balanceAccounts")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Adyen.Model.BalanceAccount{}},
      { 400, %Adyen.Model.RestServiceError{}},
      { 401, %Adyen.Model.RestServiceError{}},
      { 403, %Adyen.Model.RestServiceError{}},
      { 422, %Adyen.Model.RestServiceError{}},
      { 500, %Adyen.Model.RestServiceError{}}
    ])
  end
end
